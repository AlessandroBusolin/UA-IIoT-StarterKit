/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA REST API
 * This API provides simple REST based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnumDefinition } from './EnumDefinition';
import {
    EnumDefinitionFromJSON,
    EnumDefinitionFromJSONTyped,
    EnumDefinitionToJSON,
} from './EnumDefinition';
import type { NodeId } from './NodeId';
import {
    NodeIdFromJSON,
    NodeIdFromJSONTyped,
    NodeIdToJSON,
} from './NodeId';
import type { QualifiedName } from './QualifiedName';
import {
    QualifiedNameFromJSON,
    QualifiedNameFromJSONTyped,
    QualifiedNameToJSON,
} from './QualifiedName';

/**
 * 
 * @export
 * @interface EnumDescription
 */
export interface EnumDescription {
    /**
     * 
     * @type {EnumDefinition}
     * @memberof EnumDescription
     */
    EnumDefinition?: EnumDefinition;
    /**
     * 
     * @type {number}
     * @memberof EnumDescription
     */
    BuiltInType?: number;
    /**
     * 
     * @type {NodeId}
     * @memberof EnumDescription
     */
    DataTypeId?: NodeId;
    /**
     * 
     * @type {QualifiedName}
     * @memberof EnumDescription
     */
    Name?: QualifiedName;
}

/**
 * Check if a given object implements the EnumDescription interface.
 */
export function instanceOfEnumDescription(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EnumDescriptionFromJSON(json: any): EnumDescription {
    return EnumDescriptionFromJSONTyped(json, false);
}

export function EnumDescriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnumDescription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'EnumDefinition': !exists(json, 'EnumDefinition') ? undefined : EnumDefinitionFromJSON(json['EnumDefinition']),
        'BuiltInType': !exists(json, 'BuiltInType') ? undefined : json['BuiltInType'],
        'DataTypeId': !exists(json, 'DataTypeId') ? undefined : NodeIdFromJSON(json['DataTypeId']),
        'Name': !exists(json, 'Name') ? undefined : QualifiedNameFromJSON(json['Name']),
    };
}

export function EnumDescriptionToJSON(value?: EnumDescription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'EnumDefinition': EnumDefinitionToJSON(value.EnumDefinition),
        'BuiltInType': value.BuiltInType,
        'DataTypeId': NodeIdToJSON(value.DataTypeId),
        'Name': QualifiedNameToJSON(value.Name),
    };
}

