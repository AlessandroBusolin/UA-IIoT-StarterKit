/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA REST API
 * This API provides simple REST based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NodeId } from './NodeId';
import {
    NodeIdFromJSON,
    NodeIdFromJSONTyped,
    NodeIdToJSON,
} from './NodeId';

/**
 * 
 * @export
 * @interface RolePermissionType
 */
export interface RolePermissionType {
    /**
     * 
     * @type {NodeId}
     * @memberof RolePermissionType
     */
    RoleId?: NodeId;
    /**
     * 
     * @type {number}
     * @memberof RolePermissionType
     */
    Permissions?: number;
}

/**
 * Check if a given object implements the RolePermissionType interface.
 */
export function instanceOfRolePermissionType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RolePermissionTypeFromJSON(json: any): RolePermissionType {
    return RolePermissionTypeFromJSONTyped(json, false);
}

export function RolePermissionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RolePermissionType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'RoleId': !exists(json, 'RoleId') ? undefined : NodeIdFromJSON(json['RoleId']),
        'Permissions': !exists(json, 'Permissions') ? undefined : json['Permissions'],
    };
}

export function RolePermissionTypeToJSON(value?: RolePermissionType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'RoleId': NodeIdToJSON(value.RoleId),
        'Permissions': value.Permissions,
    };
}

