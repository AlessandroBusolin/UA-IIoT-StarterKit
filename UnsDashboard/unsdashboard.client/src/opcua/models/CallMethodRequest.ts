/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA REST API
 * This API provides simple REST based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NodeId } from './NodeId';
import {
    NodeIdFromJSON,
    NodeIdFromJSONTyped,
    NodeIdToJSON,
} from './NodeId';

/**
 * 
 * @export
 * @interface CallMethodRequest
 */
export interface CallMethodRequest {
    /**
     * 
     * @type {NodeId}
     * @memberof CallMethodRequest
     */
    ObjectId?: NodeId;
    /**
     * 
     * @type {NodeId}
     * @memberof CallMethodRequest
     */
    MethodId?: NodeId;
    /**
     * 
     * @type {Array<object>}
     * @memberof CallMethodRequest
     */
    InputArguments?: Array<object>;
}

/**
 * Check if a given object implements the CallMethodRequest interface.
 */
export function instanceOfCallMethodRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CallMethodRequestFromJSON(json: any): CallMethodRequest {
    return CallMethodRequestFromJSONTyped(json, false);
}

export function CallMethodRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CallMethodRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ObjectId': !exists(json, 'ObjectId') ? undefined : NodeIdFromJSON(json['ObjectId']),
        'MethodId': !exists(json, 'MethodId') ? undefined : NodeIdFromJSON(json['MethodId']),
        'InputArguments': !exists(json, 'InputArguments') ? undefined : json['InputArguments'],
    };
}

export function CallMethodRequestToJSON(value?: CallMethodRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ObjectId': NodeIdToJSON(value.ObjectId),
        'MethodId': NodeIdToJSON(value.MethodId),
        'InputArguments': value.InputArguments,
    };
}

