/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA REST API
 * This API provides simple REST based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NodeId } from './NodeId';
import {
    NodeIdFromJSON,
    NodeIdFromJSONTyped,
    NodeIdToJSON,
} from './NodeId';

/**
 * 
 * @export
 * @interface ExtensionObject
 */
export interface ExtensionObject {
    /**
     * 
     * @type {NodeId}
     * @memberof ExtensionObject
     */
    TypeId?: NodeId;
    /**
     * 
     * @type {number}
     * @memberof ExtensionObject
     */
    Encoding?: number;
    /**
     * 
     * @type {object}
     * @memberof ExtensionObject
     */
    Body?: object;
}

/**
 * Check if a given object implements the ExtensionObject interface.
 */
export function instanceOfExtensionObject(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExtensionObjectFromJSON(json: any): ExtensionObject {
    return ExtensionObjectFromJSONTyped(json, false);
}

export function ExtensionObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtensionObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'TypeId': !exists(json, 'TypeId') ? undefined : NodeIdFromJSON(json['TypeId']),
        'Encoding': !exists(json, 'Encoding') ? undefined : json['Encoding'],
        'Body': !exists(json, 'Body') ? undefined : json['Body'],
    };
}

export function ExtensionObjectToJSON(value?: ExtensionObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'TypeId': NodeIdToJSON(value.TypeId),
        'Encoding': value.Encoding,
        'Body': value.Body,
    };
}

